#BlueJ class context
comment0.params=
comment0.target=GreatReadsMenu()
comment1.params=
comment1.target=void\ welcome()
comment1.text=\r\n\ print\ welcome\r\n
comment10.params=
comment10.target=void\ headerOfShelfList()
comment10.text=\r\n\ the\ header\ for\ shelf\ detail\ section\r\n
comment11.params=
comment11.target=int\ userChoice()
comment11.text=\r\n\ ask\ and\ convert\ user\ choice,\ from\ string\ to\ number\r\n\ @return\ <number\ of\ user\ choice>\r\n
comment12.params=message
comment12.target=void\ warnning(java.lang.String)
comment12.text=\r\n\ pring\ a\ warnning\r\n\ @param\ <message>\r\n
comment13.params=
comment13.target=void\ pause()
comment13.text=\r\n\ pause\ and\ flush\ the\ screen\r\n
comment14.params=
comment14.target=Book\ addBookMenu()
comment14.text=\r\n\ ask\ and\ creat\ a\ new\ book\ object\ if\ user\ enter\ is\ valid\r\n\ @return\ <new\ book\ object\ that\ user\ created>\r\n
comment15.params=lastElement\ message
comment15.target=int\ selectElementMenu(int,\ java.lang.String)
comment15.text=\r\n\ ask\ user\ to\ select\ content\ by\ input\ number\ before\ the\ content\r\n\ @param\ <lastElement\:\ the\ last\ element\ in\ the\ list,\ not\ to\ let\ user\ enter\ the\ number\ after\ that>\r\n\ @param\ <message>\r\n\ @return\ <user\ input\ -\ 1,\ to\ be\ a\ index\ in\ the\ list>\r\n
comment16.params=
comment16.target=Shelf\ addShelfMenu()
comment16.text=\r\n\ ask\ and\ check\ user\ input,\ creat\ new\ shelf,\ name\ cannot\ be\ empty,\ skip\ description\ section\ means\ no\ description\r\n\ @return\ <a\ new\ shelf\ object>\r\n
comment17.params=
comment17.target=Review\ addReviewMenu()
comment17.text=\r\n\ ask\ and\ check\ user\ input,\ creat\ new\ review,\ review\ cannot\ be\ empty\r\n\ @return\ <a\ new\ review\ object>\r\n
comment18.params=message
comment18.target=java.lang.String\ stringInputCheck(java.lang.String)
comment18.text=\r\n\ check\ if\ user\ enter\ empty\ content\r\n\ @param\ <message>\r\n\ @return\ <message\:\ valid\ one>\r\n
comment19.params=userInput
comment19.target=int\ translateUserInput(int)
comment19.text=\r\n\ convert\ user\ input\ to\ index\r\n\ @return\ <index\ number>\r\n
comment2.params=
comment2.target=void\ ending()
comment2.text=\r\n\ print\ ending\r\n
comment20.params=
comment20.target=void\ clear()
comment20.text=\r\n\ clear\ the\ menu\ list,\ for\ letting\ OperationSystem\ use\ it\r\n
comment3.params=
comment3.target=void\ mainMenu()
comment3.text=\r\n\ store\ menu\ into\ the\ menu\ list\r\n
comment4.params=detail\ detialHeader
comment4.target=void\ detailMenu(java.util.ArrayList,\ java.lang.String)
comment4.text=\r\n\ store\ the\ sub\ menu\ of\ a\ list\ of\ book\ or\ shelf\ with\ the\ sign\ of\ "1."\r\n\ @param\ <detail>\r\n\ @param\ <detialHeader>\r\n
comment5.params=message
comment5.target=void\ subMenu(java.lang.String)
comment5.text=\r\n\ store\ sub\ menu\ of\ add\ or\ remove\ something\r\n\ return\ <message>\r\n
comment6.params=
comment6.target=void\ headerOfBookList()
comment6.text=\r\n\ the\ header\ for\ book\ detail\ section\r\n
comment7.params=message
comment7.target=void\ header(java.lang.String)
comment7.text=\r\n\ print\ header\ for\ book\ detail\ section\r\n\ @param\ <message>\r\n
comment8.params=obj
comment8.target=void\ showAllInfoAtSameLine(java.lang.Object)
comment8.text=\r\n\ print\ all\ information\ of\ an\ object\r\n\ @param\ <obj>\r\n
comment9.params=obj
comment9.target=void\ showAllInfo(java.lang.Object)
comment9.text=\r\n\ print\ all\ information\ of\ an\ object\ and\ return\ a\ line\r\n\ @param\ <obj>\r\n
numComments=21
